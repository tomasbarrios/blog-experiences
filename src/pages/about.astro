---
import Layout from '../layouts/BlogPost.astro';
---

<Layout
	title="About Me"
	description="What drives me"
	pubDate={new Date('June 14 2023')}
	updatedDate={new Date('August 08 2022')}
	heroImage="/product-and-engineering.png"
>
	<p>
		I consider myself a product engineer
	</p>

	<p>
		I tend to think a lot (more than I wish sometimes) on things that most coders don't.
	</p>

	<p>
		In the early days of any programmer, we tend to enjoy just getting our ideas done. It does not matter if they are good or bad.
	</p>

	<p>
		Some stay as that, and there is nothing wrong with that by itself. 
	</p>

	<p>
		But, the reality is that a lot of programmers work for a living. 
		And this usually means we are also part of an organization that wants something, most of the time for profit.
	</p>

	<p>
		Some people think that we should do as we are told, and it is not in their nature to make much questions beyond that. Not me. 
		My nature is inquisitive and curious. I am the kind of person that wants to know how things work and If something was man made, then why it was decided to be like that.
	</p>

	<p>
		This has led me to make questions like
		<ul>
			<li>
				Why this process needs these steps?
			</li>
			<li>
				Who is receiving the results of this process?
			</li>
			<li>
				Why is this result important, how it is used afterwards?
			</li>
		</ul>
	</p>

	<p>
		Making these questions has proved very useful, guiding my teams as to really focus on what is needed. 
		Most of the times you find that
		<ul>
			<li>Things are not well described</li>
			<li>Processes have more complexity than is really needed</li>
			<li>There were reasons and assumptions in the past that were understandably made, but some times they don't hold anymore</li>
			<li>There is room for improvement just by removing what is not needed</li>
		</ul>
	</p>

	<p>That is the process that I have gone in my career, so many times.</p>
	
	<p>
		In my early days, I was naive and wanted to learn, so I only focused on how to build. 
	</p>

	<p>
		As the years passed I gained some speed at building, and I went deep into what to build. I could think about different ways to approach a solution 
	</p>

	<p>
		But the <b>most important lesson</b> about what to learn came after. What I tend to focus now is to differentiate what is useful and what is not. 
		There is a reason, a goal behinds the things we do. Are we supporting that goal? That was the moment when I understood that I all this time, when I was making all these 
		questions, what I was supporting was the product.
	</p>

	<p>Took me some time, but I can say it confidently now: I am a <u>product engineer</u>.</p>

	<p>
		It costs too much to have a dev team working on the wrong stuff. And it has so many bad implications.
	</p>
</Layout>
